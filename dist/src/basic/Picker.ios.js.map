{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","item","find","child","value","selectedValue","get","childrenArray","Children","toArray","headerComponent","newChildren","forEach","type","push","cloneElement","onPress","_setModalVisible","iosIcon","fontSize","lineHeight","color","text","defaultLabel","renderButton","note","textStyle","undefined","renderIcon","modifyHeader","shadowOffset","shadowColor","shadowRadius","shadowOpacity","iosHeader","_root","c","renderHeader","onValueChange","current","label","itemTextStyle","Item","createClass","render","propTypes","StyledPickerNB"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["/* @flow */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Picker, Modal, View, ListView } from 'react-native';\r\nimport _ from 'lodash';\r\nimport { Text } from './Text';\r\nimport { List } from './List';\r\nimport { IconNB as Icon } from './IconNB';\r\nimport { Radio } from './Radio';\r\nimport { Container } from './Container';\r\nimport { Content } from './Content';\r\nimport { ListItem } from './ListItem';\r\nimport { Button } from './Button';\r\nimport { Header } from './Header';\r\nimport { Title } from './Title';\r\nimport { Left } from './Left';\r\nimport { Right } from './Right';\r\nimport { Body } from './Body';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport computeProps from '../Utils/computeProps';\r\n\r\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\r\n\r\nclass PickerNB extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      currentLabel: this.getLabel(props),\r\n      dataSource: props.children\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const currentLabel = this.state.currentLabel;\r\n    const nextLabel = this.getLabel(nextProps);\r\n    const currentDS = this.state.dataSource;\r\n    const nextDS = nextProps.children\r\n\r\n    if (currentLabel !== nextLabel) {\r\n      this.setState({\r\n        currentLabel: nextLabel,\r\n      });\r\n    }\r\n    if (currentDS !== nextDS) {\r\n      this.setState({\r\n        dataSource: nextDS,\r\n      });\r\n    }\r\n  }\r\n\r\n  getInitialStyle() {\r\n    return {\r\n      picker: {\r\n                // alignItems: 'flex-end'\r\n      },\r\n      pickerItem: {\r\n\r\n      },\r\n    };\r\n  }\r\n  _setModalVisible(visible) {\r\n    this.setState({ modalVisible: visible });\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      style: this.getInitialStyle().picker,\r\n      itemStyle: this.getInitialStyle().pickerItem,\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n\r\n  getLabel(props) {\r\n    const item = _.find(props.children, child => child.props.value === props.selectedValue);\r\n    return _.get(item, 'props.label');\r\n  }\r\n\r\n  modifyHeader() {\r\n    const childrenArray = React.Children.toArray(this.props.headerComponent.props.children);\r\n    const newChildren = [];\r\n    childrenArray.forEach((child) => {\r\n      if (child.type === Button) {\r\n        newChildren.push(React.cloneElement(child,\r\n          { onPress: () => { this._setModalVisible(false); } }));\r\n      } else {\r\n        newChildren.push(child);\r\n      }\r\n    });\r\n    return <Header {...this.props.headerComponent.props} >{newChildren}</Header>;\r\n  }\r\n\r\n  renderIcon() {\r\n    return React.cloneElement(this.props.iosIcon, { style: { fontSize: 22, lineHeight: 26, color: '#7a7a7a' } });\r\n  }\r\n\r\n  renderButton() {\r\n    const onPress = () => { this._setModalVisible(true); };\r\n    const text = this.state.currentLabel ? this.state.currentLabel : this.props.defaultLabel;\r\n    if (this.props.renderButton) {\r\n      return this.props.renderButton(onPress, text, this);\r\n    }\r\n    return <Button\r\n      style={this.props.style}\r\n      dark\r\n      picker\r\n      transparent\r\n      onPress={onPress}\r\n    >\r\n      <Text note={(this.props.note)} style={this.props.textStyle}>{text}</Text>\r\n      {(this.props.iosIcon === undefined) ? null : this.renderIcon()}\r\n    </Button>;\r\n  }\r\n\r\n  renderHeader() {\r\n    return (this.props.headerComponent) ? this.modifyHeader() : (<Header >\r\n      <Left><Button\r\n        style={{ shadowOffset: null, shadowColor: null, shadowRadius: null, shadowOpacity: null }}\r\n        transparent onPress={() => { this._setModalVisible(false); }}\r\n      ><Text>Back</Text></Button></Left>\r\n    <Body><Title>{(this.props.iosHeader) ? this.props.iosHeader : 'Select One'}</Title></Body>\r\n      <Right />\r\n    </Header>);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View ref={c => this._root = c}>\r\n        {this.renderButton()}\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={false}\r\n          visible={this.state.modalVisible}\r\n          onRequestClose={() => { this._setModalVisible(false); }}\r\n        >\r\n          <Container>\r\n            {this.renderHeader()}\r\n            <Content>\r\n              <List\r\n                dataArray={this.state.dataSource}\r\n                renderRow={child =>\r\n                  <ListItem\r\n                    selected={(child.props.value === this.props.selectedValue) ? true : false}\r\n                    button\r\n                    style={this.props.itemStyle}\r\n                    onPress={() => {\r\n                      this._setModalVisible(false); this.props.onValueChange(child.props.value);\r\n                      this.setState({ current: child.props.label });\r\n                    }}\r\n                  >\r\n                    <Text style={this.props.itemTextStyle} >{child.props.label}</Text>\r\n                    <Right>\r\n                      {(child.props.value === this.props.selectedValue) ?\r\n                                        (<Radio selected={true} />)\r\n                                        :\r\n                                        (<Radio selected={false} />)\r\n                                    }\r\n                    </Right>\r\n                  </ListItem>\r\n                            }\r\n              />\r\n            </Content>\r\n          </Container>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nPickerNB.Item = React.createClass({\r\n\r\n  render() {\r\n    return (\r\n      <Picker.Item {...this.props()} />\r\n    );\r\n  },\r\n});\r\n\r\nPickerNB.propTypes = {\r\n  ...View.propTypes,\r\n};\r\n\r\nconst StyledPickerNB = connectStyle('NativeBase.PickerNB', {}, mapPropsToStyleNames)(PickerNB);\r\n\r\nexport {\r\n  StyledPickerNB as PickerNB,\r\n};\r\n"]}