{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["React","require","ReactNative","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","createClass","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","style","renderTab","underlineStyle","contextTypes","theme","object","getDefaultProps","topTabBarActiveTextColor","topTabBarTextColor","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","textColor","fontWeight","flex","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["const React = require('react');\r\nconst ReactNative = require('react-native');\r\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\r\nimport variable from './../../theme/variables/platform';\r\nimport { TabHeading, Text, TabContainer } from './../../index';\r\nimport _ from 'lodash';\r\n\r\nconst {\r\n  StyleSheet,\r\n  View,\r\n  Animated,\r\n  Platform\r\n} = ReactNative;\r\nconst Button = require('./Button');\r\n\r\nconst DefaultTabBar = React.createClass({\r\n  propTypes: {\r\n    goToPage: React.PropTypes.func,\r\n    activeTab: React.PropTypes.number,\r\n    tabs: React.PropTypes.array,\r\n    backgroundColor: React.PropTypes.string,\r\n    activeTextColor: React.PropTypes.string,\r\n    inactiveTextColor: React.PropTypes.string,\r\n    tabStyle: View.propTypes.style,\r\n    renderTab: React.PropTypes.func,\r\n    underlineStyle: View.propTypes.style,\r\n  },\r\n  contextTypes: {\r\n    theme: React.PropTypes.object,\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      activeTextColor: variable.topTabBarActiveTextColor,\r\n      inactiveTextColor: variable.topTabBarTextColor,\r\n      backgroundColor: null,\r\n    };\r\n  },\r\n\r\n  renderTabOption(name, page) {\r\n  },\r\n\r\n  renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle) {\r\n    const headerContent = (typeof name!=='string') ? name.props.children : undefined;\r\n    const { activeTextColor, inactiveTextColor } = this.props;\r\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\r\n    const fontWeight = isTabActive ? 'bold' : 'normal';\r\n    if (typeof name==='string') {\r\n      return <Button\r\n        style={{flex: 1, }}\r\n        key={name}\r\n        onPress={() => onPressHandler(page)}\r\n        >\r\n        <TabHeading style={(isTabActive) ? activeTabStyle : tabStyle} active={isTabActive}>\r\n          <Text style={(isTabActive) ? activeTextStyle : textStyle}>\r\n            {name}\r\n          </Text>\r\n        </TabHeading>\r\n      </Button>;\r\n    }\r\n    else {\r\n      return<Button\r\n        style={{flex: 1, }}\r\n        key={_.random(1.2, 5.2)}\r\n        onPress={() => onPressHandler(page)}\r\n        >\r\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\r\n          {headerContent}\r\n        </TabHeading>\r\n      </Button>\r\n    }\r\n  },\r\n\r\n  render() {\r\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const containerWidth = this.props.containerWidth;\r\n    const numberOfTabs = this.props.tabs.length;\r\n    const tabUnderlineStyle = {\r\n      position: 'absolute',\r\n      width: containerWidth / numberOfTabs,\r\n      height: 4,\r\n      backgroundColor: variables.topTabBarActiveBorderColor,\r\n      bottom: 0,\r\n    };\r\n\r\n\r\n    const left = this.props.scrollValue.interpolate({\r\n      inputRange: [0, 1, ], outputRange: [0,  containerWidth / numberOfTabs, ],\r\n    });\r\n    return (\r\n      <TabContainer>\r\n        {this.props.tabs.map((name, page) => {\r\n          const isTabActive = this.props.activeTab === page;\r\n          const renderTab = this.props.renderTab || this.renderTab;\r\n          return renderTab(name, page, isTabActive, this.props.goToPage, this.props.tabStyle[page], this.props.activeTabStyle[page], this.props.textStyle[page], this.props.activeTextStyle[page], this.props.tabHeaderStyle[page]);\r\n        })}\r\n        <Animated.View style={[tabUnderlineStyle, { left, }, this.props.underlineStyle, ]} />\r\n      </TabContainer>\r\n    );\r\n  },\r\n});\r\n\r\n// module.exports = DefaultTabBar;\r\nconst StyledTab = connectStyle('NativeBase.DefaultTabBar', {}, mapPropsToStyleNames)(DefaultTabBar);\r\nexport {\r\n  StyledTab as DefaultTabBar,\r\n};\r\n"]}