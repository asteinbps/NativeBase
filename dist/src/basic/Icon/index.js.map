{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["Icon","variables","context","theme","platformStyle","platform","iconFamily","props","name","active","ios","default","android","OS","_root","c","getIconName","getName","contextTypes","PropTypes","object","propTypes","style","string","bool","StyledIcon"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Platform } from 'react-native';\r\nimport { connectStyle } from '@shoutem/theme';\r\n\r\nimport { IconNB } from '../IconNB';\r\nimport ic from './NBIcons.json';\r\nimport variable from './../../theme/variables/platform';\r\nimport _ from 'lodash';\r\n\r\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\r\n\r\nclass Icon extends Component {\r\n  static contextTypes = {\r\n    theme: React.PropTypes.object,\r\n  }\r\n\r\n  getName() {\r\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const platform = variables.platform;\r\n    \r\n    if (variables.iconFamily==='Ionicons') {\r\n      if (typeof ic[this.props.name]!=='object' ) {\r\n        return this.props.name;\r\n      }\r\n      else if (typeof ic[this.props.name]==='object') {\r\n        let name;\r\n        if ((platform === 'ios') && (platformStyle !== 'material') ) {\r\n          name = (this.props.active) ? ic[this.props.name].ios.active : ic[this.props.name].ios.default;\r\n        } else {\r\n          name = (this.props.active) ? ic[this.props.name].android.active : ic[this.props.name].android.default;\r\n        }\r\n        return name;\r\n      }\r\n    }\r\n    else {\r\n      return this.props.name;\r\n    }\r\n  }\r\n\r\n  getIconName() {\r\n    if (Platform.OS === 'ios') {\r\n      if (this.props.ios) {\r\n        return this.props.ios;\r\n      } else {\r\n        return (this.props.active) ?\r\n        ic[this.props.name].ios.active : ic[this.props.name].ios.default;\r\n      }\r\n    } else if(this.props.android) {\r\n      return this.props.android;\r\n    } else {\r\n      return (this.props.active) ?\r\n      ic[this.props.name].android.active : ic[this.props.name].android.default;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.ios && this.props.android) {\r\n      return (\r\n        <IconNB ref={c => this._root = c} {...this.props} name={(Platform.OS === 'ios') ? this.props.ios : this.props.android} />\r\n      );\r\n    } else if (this.props.name && (this.props.android || this.props.ios)) {\r\n      return (\r\n        <IconNB ref={c => this._root = c} {...this.props} name={this.getIconName()} />\r\n      );\r\n    } else {\r\n      return (\r\n        <IconNB ref={c => this._root = c} {...this.props} name={this.getName()} />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nIcon.propTypes = {\r\n  ...IconNB.propTypes,\r\n  style: React.PropTypes.object,\r\n  name: React.PropTypes.string,\r\n  ios: React.PropTypes.string,\r\n  android: React.PropTypes.string,\r\n  active: React.PropTypes.bool,\r\n};\r\n\r\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(Icon);\r\n\r\nexport {\r\n  StyledIcon as Icon,\r\n};\r\n"]}