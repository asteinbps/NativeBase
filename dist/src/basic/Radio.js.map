{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","variables","context","theme","platformStyle","platform","_root","c","props","OS","selected","color","brandPrimary","lineHeight","height","fontSize","radioBtnSize","radioSelectedColorAndroid","undefined","radioBtnLineHeight","contextTypes","PropTypes","object","propTypes","bool","StyledRadio"],"mappings":"+yBAAA,4B;AACA;AACA;AACA,4D;AACA,mE;AACA,qD;;AAEMA,K;;;;;AAKK;AACP,GAAMC,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;;AAEA;AACE,sEAAkB,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAvB,EAAgD,KAAKC,KAArD;AACI,sBAASC,EAAT,GAAgB,KAAjB;AACE,KAAKD,KAAL,CAAWE,QAAZ,EAAyB;AACzB,MAAO;AACLC,MAAOV,UAAUW,YADZ;AAELC,WAAY,EAFP;AAGLC,OAAQ,EAHH;AAILC,SAAUd,UAAUe,YAJf,CADkB;;AAOzB,KAAK,eAPoB,EAD1B;;AAUC;AACE,MAAO;AACLL,MAAQ,KAAKH,KAAL,CAAWE,QAAZ,CAAwBT,UAAUgB,yBAAlC,CAA8DC,SADhE;AAELL,WAAYZ,UAAUkB,kBAFjB;AAGLJ,SAAUd,UAAUe,YAHf,CADT;;AAME,KAAM,KAAKR,KAAL,CAAWE,QAAX,CAAsB,oBAAtB,CAA6C,qBANrD,EAXJ,CADF;;;;AAsBD,C,qCAhCGV,K,CACGoB,Y,CAAe,CACpBjB,MAAO,gBAAMkB,SAAN,CAAgBC,MADH,C;;;AAkCxBtB,MAAMuB,SAAN;AACK,8BAAiBA,SADtB;AAEEb,SAAU,gBAAMW,SAAN,CAAgBG,IAF5B;;;AAKA,GAAMC,aAAc,yCAAa,kBAAb,CAAiC,EAAjC,iCAA2DzB,KAA3D,CAApB,C;;;AAGiBA,K,CAAfyB,W","file":"Radio.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { TouchableOpacity, Platform } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\r\nimport variable from '../theme/variables/platform';\r\n\r\nclass Radio extends Component {\r\n  static contextTypes = {\r\n    theme: React.PropTypes.object,\r\n  }\r\n\r\n  render() {\r\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const platform = variables.platform;\r\n\r\n    return (\r\n      <TouchableOpacity ref={c => this._root = c} {...this.props}>\r\n        {(Platform.OS === 'ios') ?\r\n          (this.props.selected) && <Icon\r\n          style={{\r\n            color: variables.brandPrimary,\r\n            lineHeight: 25,\r\n            height: 20,\r\n            fontSize: variables.radioBtnSize,\r\n          }}\r\n          name=\"ios-checkmark\" />\r\n          :\r\n          <Icon\r\n            style={{\r\n              color: (this.props.selected) ? variables.radioSelectedColorAndroid : undefined,\r\n              lineHeight: variables.radioBtnLineHeight,\r\n              fontSize: variables.radioBtnSize,\r\n            }}\r\n            name={this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off'}  />\r\n      }\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nRadio.propTypes = {\r\n  ...TouchableOpacity.propTypes,\r\n  selected: React.PropTypes.bool,\r\n};\r\n\r\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(Radio);\r\n\r\nexport {\r\n  StyledRadio as Radio,\r\n};\r\n"]}