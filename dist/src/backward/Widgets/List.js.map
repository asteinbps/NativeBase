{"version":3,"sources":["../../../../src/backward/Widgets/List.js"],"names":["List","childrenArray","Children","map","props","children","child","dataArray","renderRow","ds","DataSource","rowHasChanged","r1","r2","dataSource","cloneWithRows","_root","c","renderChildren","StyledList"],"mappings":"8yBAAA,4B;AACA;;AAEA;AACA,sE;AACA,iE;;AAEMA,I;;;AAGa;AACf,GAAMC,eAAgB,gBAAMC,QAAN,CAAeC,GAAf,CAAmB,KAAKC,KAAL,CAAWC,QAA9B,CAAwC,sBAASC,MAAT,EAAxC,CAAtB;;AAEA,MAAOL,cAAP;AACD,C;;AAEQ;AACP,GAAI,KAAKG,KAAL,CAAWG,SAAX,EAAwB,KAAKH,KAAL,CAAWI,SAAvC,CAAkD;AAChD,GAAMC,IAAK,GAAI,uBAASC,UAAb,CAAwB,CAAEC,cAAe,uBAACC,EAAD,CAAKC,EAAL,QAAYD,MAAOC,EAAnB,EAAjB,CAAxB,CAAX;AACA,GAAMC,YAAaL,GAAGM,aAAH,CAAiB,KAAKX,KAAL,CAAWG,SAA5B,CAAnB;AACA;AACE;AACM,KAAKH,KADX;AAEE,wBAFF;AAGE,WAAYU,UAHd;AAIE,UAAW,KAAKV,KAAL,CAAWI,SAJxB,GADF;;;AAQD;AACD;AACE,0DAAM,IAAK,sBAAK,QAAKQ,KAAL,CAAaC,CAAlB,EAAX,EAAoC,KAAKb,KAAzC;AACG,KAAKc,cAAL,EADH,CADF;;;AAKD,C;;;;AAIH,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,iCAA0DnB,IAA1D,CAAnB,C;;;AAGgBA,I,CAAdmB,U","file":"List.js","sourcesContent":["import React from 'react';\r\nimport { ListView, View } from 'react-native';\r\n\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\r\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\r\n\r\nclass List extends NativeBaseComponent {\r\n\r\n\r\n  renderChildren() {\r\n    const childrenArray = React.Children.map(this.props.children, child => child);\r\n\r\n    return childrenArray;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.dataArray && this.props.renderRow) {\r\n      const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });\r\n      const dataSource = ds.cloneWithRows(this.props.dataArray);\r\n      return (\r\n        <ListView\r\n          {...this.props}\r\n          enableEmptySections\r\n          dataSource={dataSource}\r\n          renderRow={this.props.renderRow}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <View ref={c => this._root = c} {...this.props} >\r\n        {this.renderChildren()}\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst StyledList = connectStyle('NativeBase.List', {}, mapPropsToStyleNames)(List);\r\n\r\nexport {\r\n  StyledList as List,\r\n};\r\n"]}