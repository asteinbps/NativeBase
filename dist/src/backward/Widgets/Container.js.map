{"version":3,"sources":["../../../../src/backward/Widgets/Container.js"],"names":["Container","Array","isArray","props","children","find","item","type","displayName","filter","flex","defaultProps","style","_root","c","prepareRootProps","renderHeader","renderContent","renderFooter","propTypes","PropTypes","object","StyledContainer"],"mappings":"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","file":"Container.js","sourcesContent":["/* @flow */\r\n\r\nimport React from 'react';\r\nimport { View, Image, ScrollView, ViewPropTypes } from 'react-native';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport { Footer } from '../../basic/Footer';\r\nimport { Fab } from '../../basic/Fab';\r\nimport _ from 'lodash';\r\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\r\nimport { ViewNB } from './View';\r\nimport { Header } from './Header';\r\nimport { Content } from './Content';\r\nimport NativeBaseComponent from '../Base/NativeBaseComponent';\r\nimport computeProps from '../../Utils/computeProps';\r\n\r\nclass Container extends NativeBaseComponent {\r\n\r\n  propTypes: {\r\n        style : React.PropTypes.object\r\n    }\r\n\r\n  renderHeader() {\r\n    if (Array.isArray(this.props.children)) {\r\n      return _.find(this.props.children, (item) => {\r\n        if (item && (item.type.displayName === 'Styled(Header)' || item.type.displayName === 'Styled(SHeader)')) {\r\n          return true;\r\n        }\r\n      });\r\n    } else if (this.props.children && (this.props.children.type.displayName === 'Styled(Header)' || this.props.children.type.displayName === 'Styled(SHeader)')) {\r\n      return this.props.children;\r\n    }\r\n  }\r\n  renderContent() {\r\n    if (Array.isArray(this.props.children)) {\r\n      return _.filter(this.props.children, (item) => {\r\n        if (item && (item.type.displayName === 'Styled(ViewNB)' || item.type.displayName ===\r\n          'Styled(Content)' || item.type === Image || item.type === View ||\r\n          item.type === ScrollView || item.type.displayName === 'Styled(Fab)')) {\r\n          return true;\r\n        }\r\n      });\r\n    } else if (this.props.children && (this.props.children.type.displayName === 'Styled(Content)' ||\r\n       this.props.children.type.displayName === 'Styled(ViewNB)' ||\r\n       this.props.children.type === View || this.props.children.type === Image ||\r\n       this.props.children.type === ScrollView)) {\r\n      return this.props.children;\r\n    }\r\n  }\r\n  renderFooter() {\r\n    if (Array.isArray(this.props.children)) {\r\n      return _.find(this.props.children, (item) => {\r\n        if (item && item.type.displayName === 'Styled(Footer)') {\r\n          return true;\r\n        }\r\n      });\r\n    } else if (this.props.children && this.props.children.type.displayName === 'Styled(Footer)') {\r\n      return this.props.children;\r\n    }\r\n  }\r\n  prepareRootProps() {\r\n    const type = {\r\n      flex: 1,\r\n    };\r\n\r\n    const defaultProps = {\r\n      style: type,\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n  render() {\r\n    return (\r\n      <View ref={c => this._root = c} {...this.prepareRootProps()}>\r\n\r\n        {this.renderHeader()}\r\n\r\n        {this.renderContent()}\r\n\r\n        {this.renderFooter()}\r\n\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nContainer.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: React.PropTypes.object,\r\n};\r\n\r\nconst StyledContainer = connectStyle('NativeBase.Container', {}, mapPropsToStyleNames)(Container);\r\n\r\nexport {\r\n  StyledContainer as Container,\r\n};\r\n"]}