{"version":3,"sources":["../../../src/smart/SHeader.js"],"names":["SHeader","_root","c","props","leftButton","leftButtonPress","leftButtonStyle","title","titleStyle","rightButton","rightButtonPress","rightButtonStyle","propTypes","style","PropTypes","object","string","StyledSHeader"],"mappings":";AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;AAEMA,O;;AAEK;AACP;AACE,uDAAQ,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAb,EAAsC,KAAKC,KAA3C;AACE;AACI,KAAKA,KAAL,CAAWC,UAAZ,CAA0B;AACzB,gBADyB,CACb,QAAS,KAAKD,KAAL,CAAWE,eADP;AAEzB,MAAO,KAAKF,KAAL,CAAWG,eAFO;AAGzB,KAAKH,KAAL,CAAWC,UAHc,CAA1B,CAGmC,qDAJtC,CADF;;AAOE;AACI,KAAKD,KAAL,CAAWI,KAAZ,CAAqB,4CAAO,MAAO,KAAKJ,KAAL,CAAWK,UAAzB;AACnB,KAAKL,KAAL,CAAWI,KADQ,CAArB,CAC8B,qDAFjC,CAPF;;AAWE;AACI,KAAKJ,KAAL,CAAWM,WAAZ,CAA2B;AAC1B,gBAD0B;AAE1B,QAAS,KAAKN,KAAL,CAAWO,gBAFM,CAEY,MAAO,KAAKP,KAAL,CAAWQ,gBAF9B;AAG1B,KAAKR,KAAL,CAAWM,WAHe,CAA3B,CAGoC,qDAJvC,CAXF,CADF;;;;AAoBD,C;;;AAGHT,QAAQY,SAAR;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;AAGEX,WAAY,gBAAMU,SAAN,CAAgBC,MAH9B;AAIER,MAAO,gBAAMO,SAAN,CAAgBE,MAJzB;AAKEP,YAAa,gBAAMK,SAAN,CAAgBC,MAL/B;AAMET,gBAAiB,gBAAMQ,SAAN,CAAgBC,MANnC;AAOEP,WAAY,gBAAMM,SAAN,CAAgBC,MAP9B;AAQEJ,iBAAkB,gBAAMG,SAAN,CAAgBC,MARpC;;;AAWA,GAAME,eAAgB,wBAAa,oBAAb,CAAmC,EAAnC,iCAA6DjB,OAA7D,CAAtB,C;;AAEmBA,O,CAAjBiB,a","file":"SHeader.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport { Left } from '../basic/Left';\r\nimport { Body } from '../basic/Body';\r\nimport { Right } from '../basic/Right';\r\nimport { Header } from '../basic/Header';\r\nimport { Button } from '../basic/Button';\r\nimport { Title } from '../basic/Title';\r\nimport { connectStyle } from '@shoutem/theme';\r\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\r\n\r\nclass SHeader extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header ref={c => this._root = c} {...this.props}>\r\n        <Left>\r\n          {(this.props.leftButton) ? <Button\r\n            transparent onPress={this.props.leftButtonPress}\r\n            style={this.props.leftButtonStyle}\r\n          >{this.props.leftButton}</Button> : <View />}\r\n        </Left>\r\n        <Body>\r\n          {(this.props.title) ? <Title style={this.props.titleStyle}>\r\n            {this.props.title}</Title> : <View />}\r\n        </Body>\r\n        <Right>\r\n          {(this.props.rightButton) ? <Button\r\n            transparent\r\n            onPress={this.props.rightButtonPress} style={this.props.rightButtonStyle}\r\n          >{this.props.rightButton}</Button> : <View />}\r\n        </Right>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nSHeader.propTypes = {\r\n  ...View.propTypes,\r\n  style: React.PropTypes.object,\r\n  leftButton: React.PropTypes.object,\r\n  title: React.PropTypes.string,\r\n  rightButton: React.PropTypes.object,\r\n  leftButtonStyle: React.PropTypes.object,\r\n  titleStyle: React.PropTypes.object,\r\n  rightButtonStyle: React.PropTypes.object,\r\n};\r\n\r\nconst StyledSHeader = connectStyle('NativeBase.SHeader', {}, mapPropsToStyleNames)(SHeader);\r\nexport {\r\n  StyledSHeader as SHeader,\r\n};\r\n"]}